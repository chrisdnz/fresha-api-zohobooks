// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum InvoiceStatus {
  PAID
  UNPAID
}

model Customer {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  email          String?
  phoneNumber    String?
  zohoCustomerId String? // ID from Zoho Books after creation
  invoices       Invoice[] @relation("CustomerInvoices")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invoice {
  id            Int           @id @default(autoincrement())
  clientName    String
  invoiceDate   DateTime
  status        InvoiceStatus @default(UNPAID)
  items         Item[]        @relation("InvoiceItems")
  zohoInvoiceId String? // ID from Zoho Books after creation
  customerId    Int
  customer      Customer      @relation("CustomerInvoices", fields: [customerId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Payment   Payment[]
}

model Item {
  id          Int     @id @default(autoincrement())
  serviceName String
  price       Float
  invoiceId   Int
  invoice     Invoice @relation("InvoiceItems", fields: [invoiceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Payment {
  id            Int      @id @default(autoincrement())
  paymentNo     String
  saleNo        String
  paymentAmount Float
  paymentMethod String
  paymentDate   DateTime
  zohoPaymentId String? // ID from Zoho Books after creation
  invoiceId     Int
  invoice       Invoice  @relation(fields: [invoiceId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
